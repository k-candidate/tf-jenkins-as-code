name: Build, push, and scan the Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'jenkins_image/**'
  pull_request:
    branches:
      - main
    paths:
      - 'jenkins_image/**'

env:
  IMAGE_NAME: "kcandidate/jenkins-casc"

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image version
        id: version
        run: |
          echo "VERSION=$(date +'%Y.%m.%d.%H%M')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./jenkins_image
          push: false
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          labels: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}'
          format: 'table'
          output: 'trivy-results.txt'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Display Trivy scan results
        run: cat trivy-results.txt

      - name: Run Trivy vulnerability scanner (SARIF output)
        if: github.event_name == 'push'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.event_name == 'push'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v4
        with:
          context: ./jenkins_image
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          labels: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
